openapi: 3.0.1
info:
  title: The Confluence REST API
  description: This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
  termsOfService: https://atlassian.com/terms/
  version: 1.0.0
externalDocs:
  description: The online and complete version of the Confluence REST API docs.
  url: https://developer.atlassian.com/server/confluence/confluence-server-rest-api/
servers:
  - url: http://your-confluence-server/confluence
security:
  - bearerAuth: []

paths:
  /rest/api/content/{id}/child:
    get:
      summary: Get content children
      description: |-
        Returns a map of the direct children of a piece of content. A piece of content
        has different types of child content, depending on its type. These are
        the default parent-child content type relationships:

        - `page`: child content is `page`, `comment`, `attachment`

        Apps can override these default relationships. Apps can also introduce
        new content types that create new parent-child content relationships.

        Note, the map will always include all child content types that are valid
        for the content. However, if the content has no instances of a child content
        type, the map will contain an empty array for that child content type.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,
        and permission to view the content if it is a page.
      operationId: getContentChildren
      parameters:
        - name: id
          in: path
          description: The ID of the content to be queried for its children.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: |-
            A multi-value parameter indicating which properties of the children to expand, where:

            - `page` returns all child pages of the content.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returned if the requested content children are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentChildren'
              example:
                page:
                  results:
                    - id: '1'
                      title: Page 1
                      children:
                        page:
                          results:
                            - id: '11'
                              title: Page 1.1
                              children:
                                page:
                                  results: []
                              _links:
                                tinyui: /x/Pcz-B11
                            - id: '12'
                              title: Page 1.2
                              children:
                                page:
                                  results: []
                              _links:
                                tinyui: /x/Pcz-B12
                      _links:
                        tinyui: /x/Pcz-B1
                    - id: '2'
                      title: Page 2
                      children:
                        page:
                          results: []
                      _links:
                        tinyui: /x/Pcz-B2
        '404':
          description: |-
            Returned if;

            - There is no content with the given ID.
            - The calling user does not have permission to view the content.
          content: {}
  /rest/masterdetail/1.0/detailssummary/lines:
    get:
      summary: Get page properties master detail summary lines
      operationId: getDetailsSummaryLines
      parameters:
        - name: spaceKey
          in: query
          required: true
          schema:
            type: string
        - name: cql
          in: query
          required: true
          schema:
            type: string
        - name: headings
          in: query
          required: true
          schema:
            type: string
        - name: pageIndex
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Returned if the requested details summary lines are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsSummaryLines'
              example:
                currentPage: 0
                totalPages: 1
                renderedHeadings:
                  - Team
                detailLines:
                  - id: 11
                    title: Team 1
                    details:
                      - <div class="content-wrapper"><div class="table-wrap"><table class="wrapped confluenceTable" data-mce-resize="false"><colgroup><col/><col/><col/><col/></colgroup><tbody><tr><th class="confluenceTh">Name</th><th class="confluenceTh">Position</th><th class="confluenceTh">Function</th><th class="confluenceTh">Location</th></tr><tr><td class="confluenceTd">John Doo</td><td class="confluenceTd">Manager</td><td class="confluenceTd"><a href="/confluence/display/ORG/Product+Owner">Product Owner</a></td><td class="confluenceTd">Anywhere</td></tr><tr><td class="confluenceTd">  Doo,   Jim  </td><td class="confluenceTd">Associate</td><td class="confluenceTd"><a href="/confluence/display/ORG/Developer">Developer</a></td><td class="confluenceTd">Nowhere</td></tr><tr><td class="confluenceTd">Jane Doo</td><td class="confluenceTd">Analyst</td><td class="confluenceTd"><a href="/confluence/display/ORG/Developer">Developer</a></td><td class="confluenceTd">Here</td></tr></tbody></table></div></div>
                  - id: 12
                    title: Team 2
                    details:
                      - <div class="content-wrapper"><div class="table-wrap"><table class="wrapped confluenceTable" data-mce-resize="false"><colgroup><col/><col/><col/><col/></colgroup><tbody><tr><th class="confluenceTh">Name</th><th class="confluenceTh">Position</th><th class="confluenceTh">Function</th><th class="confluenceTh">Location</th></tr><tr><td class="confluenceTd">Jane Doo</td><td class="confluenceTd">Manager</td><td class="confluenceTd"><a href="/confluence/display/ORG/Product+Owner">Product Owner</a></td><td class="confluenceTd">Here</td></tr><tr><td class="confluenceTd"> Doo,   John </td><td class="confluenceTd">Associate</td><td class="confluenceTd"><a href="/confluence/display/ORG/Developer">Developer</a></td><td class="confluenceTd">Nowhere</td></tr><tr><td class="confluenceTd">Jim Doo</td><td class="confluenceTd">Analyst</td><td class="confluenceTd"><a href="/confluence/display/ORG/Developer">Developer</a></td><td class="confluenceTd">Anywhere</td></tr></tbody></table></div></div>


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Content:
      required:
        - status
        - type
      nullable: true
      type: object
      additionalProperties: true
      properties:
        id:
          type: string
        type:
          type: string
          description: Can be "page", "blogpost", "attachment" or "content"
        status:
          type: string
        title:
          type: string
        ancestors:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Content'
        children:
          $ref: '#/components/schemas/ContentChildren'
        descendants:
          $ref: '#/components/schemas/ContentChildren'
        extensions:
          type: object
        _expandable:
          type: object
          properties:
            childTypes:
              type: string
            children:
              type: string
            ancestors:
              type: string
            version:
              type: string
            descendants:
              type: string
        _links:
          $ref: '#/components/schemas/GenericLinks'
      description: Base object for all content types.
    ContentArray:
      required:
        - _links
        - results
        - size
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Content'
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/GenericLinks'
    ContentChildren:
      type: object
      additionalProperties: true
      properties:
        attachment:
          $ref: '#/components/schemas/ContentArray'
        comment:
          $ref: '#/components/schemas/ContentArray'
        page:
          $ref: '#/components/schemas/ContentArray'
        _expandable:
          type: object
          additionalProperties: true
          properties:
            attachment:
              type: string
            comment:
              type: string
            page:
              type: string
        _links:
          $ref: '#/components/schemas/GenericLinks'
    GenericLinks:
      type: object
      additionalProperties:
        oneOf:
          - type: object
            additionalProperties: true
          - type: string
    DetailsSummaryLines:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        renderedHeadings:
          type: array
          items:
            type: string
        detailLines:
          type: array
          items:
            $ref: '#/components/schemas/DetailsSummaryLine'
    DetailsSummaryLine:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        relativeLink:
          type: string
        details:
          type: array
          items:
            type: string
      additionalProperties: true
